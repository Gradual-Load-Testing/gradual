[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gradual"
version = "0.1.0"
description = "A stress testing framework for applications and systems"
readme = "README.md"
authors = [
    { name = "Subham Agrawal", email = "subhamagrawal7@gmail.com" },
    { name = "Aditya Khandelwal", email = "adityakedawat@gmail.com" },
]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Traffic Generation",
    "Topic :: System :: Benchmark",
]
requires-python = ">=3.9"
dependencies = [
    # Core dependencies
    "gevent>=22.10.2",         # For concurrency
    "websocket-client>=1.6.0", # For WebSocket support
    "tabulate>=0.9.0",         # Tabulate data in markdown table
    "requests>=2.31.0",        # For HTTP requests
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.2.0",
    "pre-commit>=4.2.0",
    "types-requests>=2.0.0",
    "types-gevent>=24.0.0",
    "types-PyYAML>=6.0.0",
    "build>=0.10.0",         # For package building
]
dashboard = [
    "fastapi>=0.95.0",  # For API components
    "uvicorn>=0.21.0",  # ASGI server
    "pydantic>=1.10.0", # Data validation for FastAPI
]
visualization = [
    "bokeh>=3.1.0", # For Bokeh visualization
]
metrics = [
    "prometheus-client>=0.16.0", # For Prometheus metrics
    "statsd>=4.0.0",             # For StatsD metrics
]
distributed = [
    "redis>=4.5.0",  # For distributed testing coordination
    "celery>=5.2.0", # For distributed task execution
]
auth = [
    "requests_kerberos>=0.14.0", # For Kerberos authentication
    "requests_ntlm>=1.2.0",      # For NTLM authentication
    "requests_oauthlib>=1.3.1",  # For OAuth authentication
]
kerberos = [
    "requests_kerberos>=0.14.0", # For Kerberos authentication only
]
integration = [
    "fastapi>=0.95.0",  # For API components
    "uvicorn>=0.21.0",  # ASGI server
    "pydantic>=1.10.0", # Data validation for FastAPI
]

[project.scripts]
stress-dashboard = "gradual.dashboard:main"
stress-run = "gradual.cli:main"

[project.urls]
"Homepage" = "https://github.com/Gradual-Load-Testing/gradual"
"Bug Tracker" = "https://github.com/Gradual-Load-Testing/gradual/issues"

[tool.setuptools]
package-dir = { "" = "src" }
packages = ["gradual"]

[tool.pytest.ini_options]
testpaths = ["tests"]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = false
disallow_incomplete_defs = true
check_untyped_defs = false
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
disable_error_code = ["no-untyped-def", "import-untyped", "call-arg", "annotation-unchecked"]
[[tool.mypy.overrides]]
module = ["requests_kerberos"]
ignore_missing_imports = true
